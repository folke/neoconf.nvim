{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "A Visual Studio Code extension with support for the Ruff linter and formatter.",
  "properties": {
    "ruff.args": {
      "default": [],
      "deprecationMessage": "Deprecated: Please use ruff.lint.args instead.",
      "items": {
        "type": "string"
      },
      "markdownDeprecationMessage": "**Deprecated**: Please use `#ruff.lint.args` instead.",
      "markdownDescription": "Additional command-line arguments to pass to `ruff check`, e.g., `\"args\": [\"--config=/path/to/pyproject.toml\"]`. Supports a subset of Ruff's command-line arguments, ignoring those that are required to operate the LSP, like `--force-exclude` and `--verbose`.\n\n**This setting is not supported by the native server.**",
      "scope": "resource",
      "type": "array"
    },
    "ruff.codeAction.disableRuleComment": {
      "additionalProperties": false,
      "default": {
        "enable": true
      },
      "markdownDescription": "Whether to display Quick Fix actions to disable rules via `noqa` suppression comments.",
      "properties": {
        "enable": {
          "default": true,
          "markdownDescription": "Enable the Quick Fix.",
          "type": "boolean"
        }
      },
      "scope": "resource",
      "type": "object"
    },
    "ruff.codeAction.fixViolation": {
      "additionalProperties": false,
      "default": {
        "enable": true
      },
      "markdownDescription": "Whether to display Quick Fix actions to autofix violations.",
      "properties": {
        "enable": {
          "default": true,
          "markdownDescription": "Enable the Quick Fix.",
          "type": "boolean"
        }
      },
      "scope": "resource",
      "type": "object"
    },
    "ruff.configuration": {
      "default": null,
      "markdownDescription": "Configuration overrides for Ruff. See [the documentation](https://docs.astral.sh/ruff/editors/settings/#configuration) for more details.\n\n**This setting is used only by the native server.**",
      "oneOf": [
        {
          "markdownDescription": "Path to a `ruff.toml` or `pyproject.toml` file to use for configuration.",
          "type": "string"
        },
        {
          "markdownDescription": "Inline JSON configuration for Ruff settings (e.g., `{ \"line-length\": 100 }`). *Added in Ruff 0.9.8.*",
          "type": "object"
        }
      ],
      "scope": "window",
      "type": [
        "string",
        "object"
      ]
    },
    "ruff.configurationPreference": {
      "default": "editorFirst",
      "enum": [
        "editorFirst",
        "filesystemFirst",
        "editorOnly"
      ],
      "enumDescriptions": [
        "The default strategy - configuration set in the editor takes priority over configuration set in `.toml` files.",
        "An alternative strategy - configuration set in `.toml` files takes priority over configuration set in the editor.",
        "An alternative strategy - configuration set in `.toml` files is ignored entirely."
      ],
      "markdownDescription": "The preferred method of resolving configuration in the editor with local configuration from `.toml` files.\n\n**This setting is used only by the native server.**",
      "scope": "resource",
      "type": "string"
    },
    "ruff.enable": {
      "default": true,
      "markdownDescription": "Whether to enable the Ruff extension.",
      "scope": "window",
      "type": "boolean"
    },
    "ruff.enableExperimentalFormatter": {
      "default": false,
      "deprecationMessage": "Deprecated: Formatter capabilities are now always enabled.",
      "markdownDeprecationMessage": "**Deprecated**: Formatter capabilities are now always enabled.",
      "markdownDescription": "Controls whether Ruff registers as capable of code formatting.",
      "scope": "window",
      "type": "boolean"
    },
    "ruff.exclude": {
      "default": null,
      "items": {
        "type": "string"
      },
      "markdownDescription": "Set paths for the linter and formatter to ignore. See [the documentation](https://docs.astral.sh/ruff/settings/#lint_exclude) for more details.\n\n**This setting is used only by the native server.**",
      "scope": "resource",
      "type": "array"
    },
    "ruff.fixAll": {
      "default": true,
      "markdownDescription": "Whether to register Ruff as capable of handling `source.fixAll` actions.",
      "scope": "window",
      "type": "boolean"
    },
    "ruff.format.args": {
      "default": [],
      "deprecationMessage": "Deprecated: This setting is only used by ruff-lsp which is deprecated in favor of the native language server.",
      "items": {
        "type": "string"
      },
      "markdownDeprecationMessage": "**Deprecated**: This setting is only used by [`ruff-lsp`](https://github.com/astral-sh/ruff-lsp) which is deprecated in favor of the native language server. Refer to the [migration guide](https://docs.astral.sh/ruff/editors/migration) for more information.",
      "markdownDescription": "Additional command-line arguments to pass to `ruff format`, e.g., `\"args\": [\"--config=/path/to/pyproject.toml\"]`. Supports a subset of Ruff's command-line arguments, ignoring those that are required to operate the LSP, like `--force-exclude` and `--verbose`.\n\n**This setting is not supported by the native server.**",
      "scope": "resource",
      "type": "array"
    },
    "ruff.format.preview": {
      "default": null,
      "markdownDescription": "Enable [preview mode](https://docs.astral.sh/ruff/settings/#format_preview) for the formatter; enables unstable formatting.\n\n**This setting is used only by the native server.**",
      "scope": "resource",
      "type": "boolean"
    },
    "ruff.ignoreStandardLibrary": {
      "default": true,
      "deprecationMessage": "Deprecated: This setting is only used by ruff-lsp which is deprecated in favor of the native language server.",
      "markdownDeprecationMessage": "**Deprecated**: This setting is only used by [`ruff-lsp`](https://github.com/astral-sh/ruff-lsp) which is deprecated in favor of the native language server. Refer to the [migration guide](https://docs.astral.sh/ruff/editors/migration) for more information.",
      "markdownDescription": "Whether to ignore files that are inferred to be part of the Python standard library.",
      "scope": "window",
      "type": "boolean"
    },
    "ruff.importStrategy": {
      "default": "fromEnvironment",
      "enum": [
        "fromEnvironment",
        "useBundled"
      ],
      "enumDescriptions": [
        "Use `ruff` from environment, falling back to the bundled version if `ruff` is not found.",
        "Always use the bundled version of `ruff`."
      ],
      "markdownDescription": "Strategy for loading the `ruff` executable. `fromEnvironment` picks up Ruff from the environment, falling back to the bundled version if needed. `useBundled` uses the version bundled with the extension.",
      "scope": "window",
      "type": "string"
    },
    "ruff.interpreter": {
      "default": [],
      "items": {
        "type": "string"
      },
      "markdownDescription": "Path to a Python interpreter to use to find the `ruff` executable.",
      "scope": "resource",
      "type": "array"
    },
    "ruff.lineLength": {
      "default": null,
      "markdownDescription": "Set the [line length](https://docs.astral.sh/ruff/settings/#line-length) used by the formatter and linter. Must be greater than 0 and less than or equal to 320.\n\n**This setting is used only by the native server.**",
      "maximum": 320,
      "minimum": 1,
      "scope": "resource",
      "type": [
        "integer",
        "null"
      ]
    },
    "ruff.lint.args": {
      "default": [],
      "deprecationMessage": "Deprecated: This setting is only used by ruff-lsp which is deprecated in favor of the native language server.",
      "items": {
        "type": "string"
      },
      "markdownDeprecationMessage": "**Deprecated**: This setting is only used by [`ruff-lsp`](https://github.com/astral-sh/ruff-lsp) which is deprecated in favor of the native language server. Refer to the [migration guide](https://docs.astral.sh/ruff/editors/migration) for more information.",
      "markdownDescription": "Additional command-line arguments to pass to `ruff check`, e.g., `\"args\": [\"--config=/path/to/pyproject.toml\"]`. Supports a subset of Ruff's command-line arguments, ignoring those that are required to operate the LSP, like `--force-exclude` and `--verbose`.\n\n**This setting is not supported by the native server.**",
      "scope": "resource",
      "type": "array"
    },
    "ruff.lint.enable": {
      "default": true,
      "markdownDescription": "Whether to enable linting. Set to `false` to use Ruff exclusively as a formatter.",
      "scope": "window",
      "type": "boolean"
    },
    "ruff.lint.extendSelect": {
      "default": null,
      "items": {
        "type": "string"
      },
      "markdownDescription": "Enable additional rule codes on top of existing configuration, instead of overriding it. Use `ALL` to enable all rules.\n\n**This setting is used only by the native server.**",
      "scope": "resource",
      "type": "array"
    },
    "ruff.lint.ignore": {
      "default": null,
      "items": {
        "type": "string"
      },
      "markdownDescription": "Set rule codes to disable. See [the documentation](https://docs.astral.sh/ruff/settings/#lint_ignore) for more details.\n\n**This setting is used only by the native server.**",
      "scope": "resource",
      "type": "array"
    },
    "ruff.lint.preview": {
      "default": null,
      "markdownDescription": "Enable [preview mode](https://docs.astral.sh/ruff/settings/#lint_preview) for the linter; enables unstable rules and fixes.\n\n**This setting is used only by the native server.**",
      "scope": "resource",
      "type": "boolean"
    },
    "ruff.lint.run": {
      "default": "onType",
      "deprecationMessage": "Deprecated: This setting is only used by ruff-lsp which is deprecated in favor of the native language server.",
      "enum": [
        "onType",
        "onSave"
      ],
      "enumDescriptions": [
        "Run Ruff on every keystroke.",
        "Run Ruff on save."
      ],
      "markdownDeprecationMessage": "**Deprecated**: This setting is only used by [`ruff-lsp`](https://github.com/astral-sh/ruff-lsp) which is deprecated in favor of the native language server. Refer to the [migration guide](https://docs.astral.sh/ruff/editors/migration) for more information.",
      "markdownDescription": "Run Ruff on every keystroke (`onType`) or on save (`onSave`).\n\n**This setting is not supported by the native server.**",
      "scope": "window",
      "type": "string"
    },
    "ruff.lint.select": {
      "default": null,
      "examples": [
        [
          "E4",
          "E7",
          "E9",
          "F"
        ]
      ],
      "items": {
        "type": "string"
      },
      "markdownDescription": "Set rule codes to enable. Use `ALL` to enable all rules. See [the documentation](https://docs.astral.sh/ruff/settings/#lint_select) for more details.\n\n**This setting is used only by the native server.**",
      "scope": "resource",
      "type": "array"
    },
    "ruff.logFile": {
      "default": null,
      "markdownDescription": "Path to the log file for the language server.\n\n**This setting is used only by the native server.**",
      "scope": "application",
      "type": "string"
    },
    "ruff.logLevel": {
      "default": null,
      "enum": [
        "error",
        "warning",
        "info",
        "debug",
        "trace"
      ],
      "markdownDescription": "Controls the log level of the language server.\n\n**This setting is used only by the native server.**",
      "scope": "application",
      "type": "string"
    },
    "ruff.nativeServer": {
      "default": "auto",
      "enum": [
        "on",
        "off",
        "auto",
        true,
        false
      ],
      "markdownDescription": "Whether to use the native language server, [`ruff-lsp`](https://github.com/astral-sh/ruff-lsp) or automatically decide between the two based on the Ruff version and extension settings.",
      "markdownEnumDescriptions": [
        "Use the native language server. A warning will be displayed if deprecated settings are detected.",
        "Use [`ruff-lsp`](https://github.com/astral-sh/ruff-lsp). A warning will be displayed if settings specific to the native server are detected.",
        "Automatically select between the native language server and [`ruff-lsp`](https://github.com/astral-sh/ruff-lsp) based on the following conditions:\n1. If the Ruff version is >= `0.5.3`, use the native language server unless any deprecated settings are detected. In that case, show a warning and use [`ruff-lsp`](https://github.com/astral-sh/ruff-lsp) instead.\n2. If the Ruff version is < `0.5.3`, use [`ruff-lsp`](https://github.com/astral-sh/ruff-lsp). A warning will be displayed if settings specific to the native server are detected.",
        "Same as `on`.",
        "Same as `off`."
      ],
      "scope": "window",
      "type": [
        "boolean",
        "string"
      ]
    },
    "ruff.organizeImports": {
      "default": true,
      "markdownDescription": "Whether to register Ruff as capable of handling `source.organizeImports` actions.",
      "scope": "window",
      "type": "boolean"
    },
    "ruff.path": {
      "default": [],
      "items": {
        "type": "string"
      },
      "markdownDescription": "Path to a custom `ruff` executable, e.g., `[\"/path/to/ruff\"]`.",
      "scope": "resource",
      "type": "array"
    },
    "ruff.run": {
      "default": "onType",
      "deprecationMessage": "Deprecated: Please use ruff.lint.run instead.",
      "enum": [
        "onType",
        "onSave"
      ],
      "enumDescriptions": [
        "Run Ruff on every keystroke.",
        "Run Ruff on save."
      ],
      "markdownDeprecationMessage": "**Deprecated**: Please use `#ruff.lint.run` instead.",
      "markdownDescription": "Run Ruff on every keystroke (`onType`) or on save (`onSave`).\n\n**This setting is not supported by the native server.**",
      "scope": "window",
      "type": "string"
    },
    "ruff.showNotifications": {
      "default": "off",
      "deprecationMessage": "Deprecated: This setting is only used by ruff-lsp which is deprecated in favor of the native language server.",
      "enum": [
        "off",
        "onError",
        "onWarning",
        "always"
      ],
      "enumDescriptions": [
        "All notifications are turned off, any errors or warning are still available in the logs.",
        "Notifications are shown only in the case of an error.",
        "Notifications are shown for errors and warnings.",
        "Notifications are show for anything that the server chooses to show."
      ],
      "markdownDeprecationMessage": "**Deprecated**: This setting is only used by [`ruff-lsp`](https://github.com/astral-sh/ruff-lsp) which is deprecated in favor of the native language server. Refer to the [migration guide](https://docs.astral.sh/ruff/editors/migration) for more information.",
      "markdownDescription": "Controls when notifications are shown by this extension.",
      "scope": "window",
      "type": "string"
    },
    "ruff.showSyntaxErrors": {
      "default": true,
      "markdownDescription": "Whether to show syntax error diagnostics.",
      "scope": "window",
      "type": "boolean"
    },
    "ruff.trace.server": {
      "default": "off",
      "enum": [
        "off",
        "messages",
        "verbose"
      ],
      "markdownDescription": "Traces the communication between VSCode and the ruff-lsp.",
      "type": "string"
    }
  }
}
