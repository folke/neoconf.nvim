{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Advanced linter to detect & fix coding issues locally in JS/TS, Python, Java, C#, C/C++, Go, PHP.  Use with SonarQube (Server, Cloud) for optimal team performance.",
  "properties": {
    "sonarlint.analysisExcludesStandalone": {
      "default": "",
      "markdownDescription": "Files whose name match this [glob pattern](https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob) will not be processed by analyzers. In [Connected Mode](command:SonarLint.HelpAndFeedbackLinkClicked?%22connectedModeDocs%22) with SonarQube Server or SonarQube Cloud, this property will be ignored and the server's exclusion settings will be applied. No rules are evaluated on excluded files. Example: `**/lib/**,**/*generated*`",
      "order": 13,
      "scope": "resource",
      "type": "string"
    },
    "sonarlint.analyzerProperties": {
      "markdownDescription": "Extra properties that could be passed to the code analyzers. Only for advanced use cases.",
      "order": 92,
      "patternProperties": {
        "^.*$": {
          "markdownDescription": "One entry value",
          "type": "string"
        },
        "additionalProperties": false
      },
      "scope": "resource",
      "type": "object"
    },
    "sonarlint.automaticAnalysis": {
      "default": true,
      "markdownDescription": "Enable or disable on-the-fly analysis of files you work on. When enabled, SonarQube for IDE will automatically analyze open files and show findings in real-time.",
      "order": 5,
      "scope": "application",
      "type": "boolean"
    },
    "sonarlint.connectedMode.connections.sonarcloud": {
      "default": [],
      "items": {
        "additionalProperties": false,
        "examples": [
          {
            "organizationKey": "<replace_with_your_sonarqube_cloud_organization_key>"
          },
          {
            "connectionId": "MyOrganization",
            "disableNotifications": false,
            "organizationKey": "<replace_with_your_sonarqube_cloud_organization_key>"
          }
        ],
        "properties": {
          "connectionId": {
            "description": "A unique identifier for this connection to be used as a reference in `#sonarlint.connectedMode.project#`. Only needed if you plan to use multiple connections to SonarQube (Server, Cloud).",
            "type": "string"
          },
          "disableNotifications": {
            "description": "SonarQube for VS Code will show notifications for bound projects when there are new issues assigned to you, or when the quality gate status changed. Set to false to disable all notifications for projects bound to this connection.",
            "type": "boolean"
          },
          "organizationKey": {
            "description": "A SonarQube Cloud organization key. If you want to bind different projects that are in different organizations, simply declare multiple connections.",
            "type": "string"
          },
          "region": {
            "description": "Region of the SonarQube Cloud instance. Use 'US' for `sonarqube.us`, 'EU' for `sonarcloud.io`.",
            "enum": [
              "EU",
              "US"
            ],
            "type": "string"
          },
          "token": {
            "description": "Token generated from 'My Account>Security' in SonarQube Cloud",
            "type": "string"
          }
        },
        "required": [
          "organizationKey"
        ],
        "type": "object"
      },
      "markdownDescription": "Connect SonarQube for IDE to SonarQube Cloud to apply the same code quality and security standards as your team. Analyze more languages, detect more issues **on the whole project**, receive notifications about the quality gate status, and more. Quality Profiles and file exclusion settings defined on the server are shared between all connected users. Please find the documentation [here](https://docs.sonarsource.com/sonarqube-for-vs-code/team-features/connected-mode/)",
      "order": 3,
      "scope": "application",
      "type": "array"
    },
    "sonarlint.connectedMode.connections.sonarqube": {
      "default": [],
      "items": {
        "additionalProperties": false,
        "examples": [
          {
            "serverUrl": "https://<replace_with_your_sonarqube_server_url>"
          },
          {
            "connectionId": "MyCompanySonarQube",
            "disableNotifications": false,
            "serverUrl": "https://<replace_with_your_sonarqube_server_url>"
          }
        ],
        "properties": {
          "connectionId": {
            "description": "A unique identifier for this connection to be used as a reference in `#sonarlint.connectedMode.project#`. Only needed if you plan to use multiple connections to SonarQube (Server, Cloud).",
            "type": "string"
          },
          "disableNotifications": {
            "description": "SonarQube for VS Code will show notifications for bound projects when there are new issues assigned to you, or when the quality gate status changed. Set to false to disable all notifications for projects bound to this connection.",
            "type": "boolean"
          },
          "serverUrl": {
            "description": "URL of the SonarQube Server.",
            "type": "string"
          },
          "token": {
            "description": "Token generated from 'My Account>Security' in SonarQube Server",
            "type": "string"
          }
        },
        "required": [
          "serverUrl"
        ],
        "type": "object"
      },
      "markdownDescription": "Connect SonarQube for IDE to SonarQube Server to apply the same code quality and security standards as your team. Analyze more languages, detect more issues **on the whole project**, receive notifications about the quality gate status, and more. Quality Profiles and file exclusion settings defined on the server are shared between all connected users. Please find the documentation [here](https://docs.sonarsource.com/sonarqube-for-vs-code/team-features/connected-mode/)",
      "order": 2,
      "scope": "application",
      "type": "array"
    },
    "sonarlint.connectedMode.project": {
      "anyOf": [
        {
          "additionalProperties": false,
          "deprecationMessage": "Replace `serverId` attribute by `connectionId`.",
          "properties": {
            "projectKey": {
              "description": "Key of the project in SonarQube (Server, Cloud)",
              "type": "string"
            },
            "serverId": {
              "description": "Identifier of the server connection declared in `#sonarlint.connectedMode.connections.sonarqube#` or `#sonarlint.connectedMode.connections.sonarcloud#`",
              "type": "string"
            }
          },
          "required": [
            "serverId",
            "projectKey"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "connectionId": {
              "description": "Identifier of the server connection declared in `#sonarlint.connectedMode.connections.sonarqube#` or `#sonarlint.connectedMode.connections.sonarcloud#`",
              "type": "string"
            },
            "projectKey": {
              "description": "Key of the project in SonarQube Server or SonarQube Cloud (can be found on project homepage)",
              "type": "string"
            }
          },
          "required": [
            "projectKey"
          ],
          "type": "object"
        }
      ],
      "default": {},
      "examples": [
        {
          "projectKey": "<replace_with_server_project_key>"
        },
        {
          "connectionId": "<replace_with_connection_id>",
          "projectKey": "<replace_with_server_project_key>"
        }
      ],
      "markdownDescription": "Bind the current workspace folder to a [SonarQube Server](command:SonarLint.HelpAndFeedbackLinkClicked?%22sonarQubeProductPage%22) or [SonarQube Cloud](command:SonarLint.HelpAndFeedbackLinkClicked?%5B%7B%22id%22%3A%22sonarCloudProductPage%22%2C%22utm%22%3A%7B%22content%22%3A%22settings-connected-mode%22%2C%22term%22%3A%22bind-current-workspace%22%7D%7D%5D) project. Requires connection details to be defined in the setting `#sonarlint.connectedMode.connections.sonarqube#` or `#sonarlint.connectedMode.connections.sonarcloud#`.\n\nBinding a workspace folder to a server project allows SonarQube for VS Code to match, as much as possible, the same rules and settings as found on the server, and hence share the analysis configuration with other contributors.\n\nExample:\n\n    \"sonarlint.connectedMode.project\": {\n      \"projectKey\": \"my_project\",\n      \"connectionId\":\"my_connection_id\"\n    }\n\n",
      "order": 4,
      "scope": "resource"
    },
    "sonarlint.connectedMode.servers": {
      "default": [],
      "deprecationMessage": "The setting is deprecated. Use `sonarlint.connectedMode.connections.sonarqube` or `sonarlint.connectedMode.connections.sonarcloud` instead.",
      "items": {
        "additionalProperties": false,
        "properties": {
          "organizationKey": {
            "description": "Only used for SonarQube Cloud",
            "type": "string"
          },
          "serverId": {
            "description": "A unique identifier for this server connection. Will be referenced from `#sonarlint.connectedMode.project#`",
            "type": "string"
          },
          "serverUrl": {
            "description": "URL of the server. Use https://sonarcloud.io for SonarQube Cloud.",
            "type": "string"
          },
          "token": {
            "description": "Token generated from My Account>Security in SonarQube (Server, Cloud)",
            "type": "string"
          }
        }
      },
      "markdownDescription": "Configure one or more connection(s) to SonarQube (Server, Cloud). For security reasons, the token should not be stored in SCM with workspace settings. The `serverId` can be any identifier and will be referenced in `#sonarlint.connectedMode.project#`.\n\nExample for SonarQube Cloud:\n\n    \"sonarlint.connectedMode.servers\": [\n      {\n        \"serverId\": \"my_orga_in_sonarcloud.io\",\n        \"serverUrl\": \"https://sonarcloud.io\",\n        \"organizationKey\": \"my_organization\",\n        \"token\": \"V2VkIE1...\"\n      }\n    ]\n\nExample for SonarQube Server:\n\n    \"sonarlint.connectedMode.servers\": [\n      {\n        \"serverId\": \"my_sonarqube\",\n        \"serverUrl\": \"https://sonar.mycompany.com\",\n        \"token\": \"V2VkIE1...\"\n      }\n    ]",
      "scope": "application",
      "type": "array"
    },
    "sonarlint.disableTelemetry": {
      "default": false,
      "markdownDescription": "Disable sending anonymous usage statistics to SonarSource. Click [here](https://github.com/SonarSource/sonarlint-vscode/blob/master/telemetry-sample.md) to see a sample of the data that are collected.",
      "order": 99,
      "scope": "window",
      "type": "boolean"
    },
    "sonarlint.earlyAccess.showRegionSelection": {
      "default": false,
      "markdownDescription": "Show region selection while creating SonarQube Cloud Connection",
      "scope": "machine",
      "type": "boolean"
    },
    "sonarlint.focusOnNewCode": {
      "default": false,
      "markdownDescription": "If enabled, by default, [focusing on new code](https://docs.sonarsource.com/sonarqube-for-vs-code/using/investigating-issues/#focusing-on-new-code) shows issues introduced in the last 30 days.\n\nFor the most accurate and customizable new code definition, use [Connected Mode](https://docs.sonarsource.com/sonarqube-for-vs-code/team-features/connected-mode) with SonarQube (Server, Cloud).",
      "order": 100,
      "scope": "machine",
      "type": "boolean"
    },
    "sonarlint.ls.javaHome": {
      "markdownDescription": "Path to a Java Runtime Environment (17 or more recent) used to launch the SonarQube for VS Code Language Server.\n* On Windows, backslashes must be escaped, e.g. `C:\\\\Program Files\\\\Java\\\\jdk-17` \n* On macOS, this path should include the `/Contents/Home` directory, e.g `/Library/Java/JavaVirtualMachines/corretto-17.0.5/Contents/Home`",
      "order": 20,
      "scope": "machine",
      "type": "string"
    },
    "sonarlint.ls.vmargs": {
      "markdownDescription": "Extra JVM arguments used to launch the SonarLint Language Server. e.g. `-Xmx1024m`",
      "order": 21,
      "scope": "machine",
      "type": "string"
    },
    "sonarlint.output.showVerboseLogs": {
      "default": false,
      "description": "Enable verbose log level in the SonarQube for IDE output.",
      "order": 90,
      "scope": "window",
      "type": "boolean"
    },
    "sonarlint.pathToCompileCommands": {
      "markdownDescription": "Path to the active compilation database, e.g. `C:\\\\Repos\\\\MyProject\\\\compile_commands.json`",
      "order": 11,
      "scope": "resource",
      "type": "string"
    },
    "sonarlint.pathToNodeExecutable": {
      "markdownDescription": "Path to a Node.js executable (versions above 20.12.0, or 22.11.0) used to analyze JavaScript and TypeScript code. \nOn Windows, backslashes must be escaped, e.g. `C:\\\\Program Files\\\\NodeJS\\\\20-lts\\\\bin\\\\node.exe`",
      "order": 10,
      "scope": "machine",
      "type": "string"
    },
    "sonarlint.rules": {
      "additionalProperties": false,
      "default": {},
      "markdownDescription": "Customize applied rule set. This property contains a list of rules whose activation level or parameter values differ from the one provided by default. In [Connected Mode](command:SonarLint.HelpAndFeedbackLinkClicked?%22connectedModeDocs%22), this configuration is overridden by the projects's Quality Profile, as configured on server side and can be **shared among contributors**. See [SonarLint Rules](command:SonarLint.AllRules.focus) view for the list of **locally** available rules.\n\nExample:\n\n    \"sonarlint.rules\": {\n        \"javascript:S1481\": {\n            \"level\": \"off\",\n         },\n        \"javascript:S103\": {\n            \"level\": \"on\",\n            \"parameters\": {\n                \"maximumLineLength\": \"120\"\n            }\n        }\n    }\n",
      "order": 1,
      "patternProperties": {
        "^[^:]+:[^:]+$": {
          "markdownDescription": "Property names are rule keys in the form: `repo:key`",
          "properties": {
            "additionalProperties": false,
            "level": {
              "enum": [
                "off",
                "on"
              ],
              "markdownDescription": "When set to `off`, disable the rule. When set to `on`, enable the rule.",
              "type": "string"
            },
            "parameters": {
              "markdownDescription": "Rule parameters. See rule description for accepted parameters. E.g `{ \"intParam\": \"123\" }`.",
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "scope": "application",
      "type": "object"
    },
    "sonarlint.startFlightRecorder": {
      "default": false,
      "markdownDescription": "Start the language server's flight recorder mode.\n\n⚠ **This feature shares detailed information with SonarSource (logs, telemetry events) that may include _confidential_ data, only enable if requested to help investigate an issue.**",
      "scope": "machine",
      "type": "boolean"
    },
    "sonarlint.testFilePattern": {
      "default": "",
      "markdownDescription": "Files whose name match this [glob pattern](https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob) are considered as test files by analyzers. Most rules are *not* evaluated on test files.\n\nIn [Connected Mode](command:SonarLint.HelpAndFeedbackLinkClicked?%22connectedModeDocs%22), this setting is configured **on the server-side** and shared among all contributors.\n\nExample: `**/test/**,**/*test*,**/*Test*`",
      "order": 12,
      "scope": "resource",
      "type": "string"
    },
    "sonarlint.trace.server": {
      "anyOf": [
        {
          "default": "off",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "type": "string"
        },
        {
          "additionalProperties": false,
          "properties": {
            "format": {
              "default": "text",
              "enum": [
                "text",
                "json"
              ],
              "type": "string"
            },
            "verbosity": {
              "default": "off",
              "enum": [
                "off",
                "messages",
                "verbose"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "default": "off",
      "description": "Traces the communication between VS Code and the SonarLint language server.",
      "order": 98,
      "scope": "window"
    }
  }
}
