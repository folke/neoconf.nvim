{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Provides rich language support for HTML and Handlebar files",
  "properties": {
    "html.autoClosingTags": {
      "default": true,
      "description": "Enable/disable autoclosing of HTML tags.",
      "scope": "resource",
      "type": "boolean"
    },
    "html.autoCreateQuotes": {
      "default": true,
      "description": "Enable/disable auto creation of quotes for HTML attribute assignment. The type of quotes can be configured by `#html.completion.attributeDefaultValue#`.",
      "scope": "resource",
      "type": "boolean"
    },
    "html.completion.attributeDefaultValue": {
      "default": "doublequotes",
      "enum": [
        "doublequotes",
        "singlequotes",
        "empty"
      ],
      "enumDescriptions": [
        "Attribute value is set to \"\".",
        "Attribute value is set to ''.",
        "Attribute value is not set."
      ],
      "markdownDescription": "Controls the default value for attributes when completion is accepted.",
      "scope": "resource",
      "type": "string"
    },
    "html.customData": {
      "default": [],
      "items": {
        "type": "string"
      },
      "markdownDescription": "A list of relative file paths pointing to JSON files following the [custom data format](https://github.com/microsoft/vscode-html-languageservice/blob/master/docs/customData.md).\n\nVS Code loads custom data on startup to enhance its HTML support for the custom HTML tags, attributes and attribute values you specify in the JSON files.\n\nThe file paths are relative to workspace and only workspace folder settings are considered.",
      "scope": "resource",
      "type": "array"
    },
    "html.format.contentUnformatted": {
      "default": "pre,code,textarea",
      "markdownDescription": "List of tags, comma separated, where the content shouldn't be reformatted. `null` defaults to the `pre` tag.",
      "scope": "resource",
      "type": [
        "string",
        "null"
      ]
    },
    "html.format.enable": {
      "default": true,
      "description": "Enable/disable default HTML formatter.",
      "scope": "window",
      "type": "boolean"
    },
    "html.format.extraLiners": {
      "default": "head, body, /html",
      "markdownDescription": "List of tags, comma separated, that should have an extra newline before them. `null` defaults to `\"head, body, /html\"`.",
      "scope": "resource",
      "type": [
        "string",
        "null"
      ]
    },
    "html.format.indentHandlebars": {
      "default": false,
      "markdownDescription": "Format and indent `{{#foo}}` and `{{/foo}}`.",
      "scope": "resource",
      "type": "boolean"
    },
    "html.format.indentInnerHtml": {
      "default": false,
      "markdownDescription": "Indent `<head>` and `<body>` sections.",
      "scope": "resource",
      "type": "boolean"
    },
    "html.format.maxPreserveNewLines": {
      "default": null,
      "markdownDescription": "Maximum number of line breaks to be preserved in one chunk. Use `null` for unlimited.",
      "scope": "resource",
      "type": [
        "number",
        "null"
      ]
    },
    "html.format.preserveNewLines": {
      "default": true,
      "description": "Controls whether existing line breaks before elements should be preserved. Only works before elements, not inside tags or for text.",
      "scope": "resource",
      "type": "boolean"
    },
    "html.format.templating": {
      "default": false,
      "description": "Honor django, erb, handlebars and php templating language tags.",
      "scope": "resource",
      "type": "boolean"
    },
    "html.format.unformatted": {
      "default": "wbr",
      "markdownDescription": "List of tags, comma separated, that shouldn't be reformatted. `null` defaults to all tags listed at https://www.w3.org/TR/html5/dom.html#phrasing-content.",
      "scope": "resource",
      "type": [
        "string",
        "null"
      ]
    },
    "html.format.unformattedContentDelimiter": {
      "default": "",
      "markdownDescription": "Keep text content together between this string.",
      "scope": "resource",
      "type": "string"
    },
    "html.format.wrapAttributes": {
      "default": "auto",
      "description": "Wrap attributes.",
      "enum": [
        "auto",
        "force",
        "force-aligned",
        "force-expand-multiline",
        "aligned-multiple",
        "preserve",
        "preserve-aligned"
      ],
      "enumDescriptions": [
        "Wrap attributes only when line length is exceeded.",
        "Wrap each attribute except first.",
        "Wrap each attribute except first and keep aligned.",
        "Wrap each attribute.",
        "Wrap when line length is exceeded, align attributes vertically.",
        "Preserve wrapping of attributes.",
        "Preserve wrapping of attributes but align."
      ],
      "scope": "resource",
      "type": "string"
    },
    "html.format.wrapAttributesIndentSize": {
      "default": null,
      "markdownDescription": "Indent wrapped attributes to after N characters. Use `null` to use the default indent size. Ignored if `#html.format.wrapAttributes#` is set to `aligned`.",
      "scope": "resource",
      "type": [
        "number",
        "null"
      ]
    },
    "html.format.wrapLineLength": {
      "default": 120,
      "description": "Maximum amount of characters per line (0 = disable).",
      "scope": "resource",
      "type": "integer"
    },
    "html.hover.documentation": {
      "default": true,
      "description": "Show tag and attribute documentation in hover.",
      "scope": "resource",
      "type": "boolean"
    },
    "html.hover.references": {
      "default": true,
      "description": "Show references to MDN in hover.",
      "scope": "resource",
      "type": "boolean"
    },
    "html.mirrorCursorOnMatchingTag": {
      "default": false,
      "deprecationMessage": "Deprecated in favor of `editor.linkedEditing`",
      "description": "Enable/disable mirroring cursor on matching HTML tag.",
      "scope": "resource",
      "type": "boolean"
    },
    "html.suggest.html5": {
      "default": true,
      "description": "Controls whether the built-in HTML language support suggests HTML5 tags, properties and values.",
      "scope": "resource",
      "type": "boolean"
    },
    "html.trace.server": {
      "default": "off",
      "description": "Traces the communication between VS Code and the HTML language server.",
      "enum": [
        "off",
        "messages",
        "verbose"
      ],
      "scope": "window",
      "type": "string"
    },
    "html.validate.scripts": {
      "default": true,
      "description": "Controls whether the built-in HTML language support validates embedded scripts.",
      "scope": "resource",
      "type": "boolean"
    },
    "html.validate.styles": {
      "default": true,
      "description": "Controls whether the built-in HTML language support validates embedded styles.",
      "scope": "resource",
      "type": "boolean"
    }
  }
}
